{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Desktop/facerecognition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/facerecognition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/facerecognition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/facerecognition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Desktop/facerecognition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Countdown from './components/Countdown/Countdown';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Clarifai from 'clarifai';\nimport './App.css';\nvar app = new Clarifai.App({\n  apiKey: '4f9684d9711b4a7e880344625431496a'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 80\n      }\n    },\n    move: {\n      enable: true,\n      random: true,\n      speed: 4\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById('inputImage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width + 3,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width + 3,\n        bottomRow: height - clarifaiFace.bottom_row * height + 5\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      console.log(box);\n\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        return _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'SignOut') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })) : route === 'SignIn' ? React.createElement(SignIn, {\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/facerecognition/src/App.js"],"names":["React","Component","Particles","Navigation","Register","Logo","Countdown","ImageLinkForm","FaceRecognition","Rank","SignIn","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","move","random","speed","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Countdown from './components/Countdown/Countdown';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '4f9684d9711b4a7e880344625431496a'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 80\n      }\n    },\n    move: {\n      enable:true,\n      random: true,\n      speed: 4    \n    },\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state= {\n      input:'',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false    \n    }\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: (clarifaiFace.left_col * width) + 3,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width) + 3,\n      bottomRow: height - (clarifaiFace.bottom_row * height) + 5\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'SignOut'){\n      this.setState({isSignedIn: false});\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n          {route === 'home' \n          ? <div>\n          <Logo/>\n          <Rank/>\n          <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n          <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n          :(\n          route==='SignIn'\n          ?<SignIn onRouteChange={this.onRouteChange}/>\n          :<Register onRouteChange={this.onRouteChange}/>\n          )\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}